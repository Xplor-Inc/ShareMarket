// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareMarket.DesktopApp;

#nullable disable

namespace ShareMarket.DesktopApp.Migrations
{
    [DbContext(typeof(ShareMarketContext))]
    [Migration("20240921192119_MFSS782_123")]
    partial class MFSS782_123
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShareMarket.DesktopApp.Entities.DailyHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Avg14DaysLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Avg14DaysProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Loss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RSI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RSI5DMA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RSI5DMADiff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("DailyHistories");
                });

            modelBuilder.Entity("ShareMarket.DesktopApp.Entities.EquityStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("CYHYL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CYHYLPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Change")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("DayHigh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DayLow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IndexName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstrumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCASec")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDebtSec")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelisted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsETFSec")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFNOSec")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSLBSec")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<bool>("IsYLAYH")
                        .HasColumnType("bit");

                    b.Property<decimal>("LastPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("LastUpdateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PerChange30d")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PerChange365d")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousClose")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RSI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RSI5DMA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RSI5DMADiff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("RSIUpdateOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SectorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("YearHigh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("YearHighOn")
                        .HasColumnType("date");

                    b.Property<decimal>("YearLow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("YearLowOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("EquityStocks");
                });

            modelBuilder.Entity("ShareMarket.DesktopApp.Entities.MFSchemes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CrisilRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("GrowwRating")
                        .HasColumnType("int");

                    b.Property<string>("MetaDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaRobots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NfoRisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("MFSchemes");
                });

            modelBuilder.Entity("ShareMarket.DesktopApp.Entities.MFStockHolding", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CorpusPer")
                        .HasColumnType("float");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("InstrumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PortfolioDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingMarketCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SchemeId")
                        .HasColumnType("bigint");

                    b.Property<string>("SectorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockSearchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("SchemeId");

                    b.ToTable("StockHoldings");
                });

            modelBuilder.Entity("ShareMarket.DesktopApp.Entities.MFStockHolding", b =>
                {
                    b.HasOne("ShareMarket.DesktopApp.Entities.MFSchemes", "Scheme")
                        .WithMany()
                        .HasForeignKey("SchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scheme");
                });
#pragma warning restore 612, 618
        }
    }
}
